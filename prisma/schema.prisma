datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String
  role      String    @default("CLIENTE")

  accounts     Account[]
  sessions     Session[]
  reservations Reservation[]
  packages     UserPackage[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @map("refresh_token")
  access_token       String? @map("access_token")
  expires_at         Int?    @map("expires_at")
  token_type         String? @map("token_type")
  scope              String?
  id_token           String? @map("id_token")
  session_state      String? @map("session_state")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Service {
  id           String        @id @default(cuid())
  name         String
  reservations Reservation[]
}

model Therapist {
  id           String        @id @default(cuid())
  name         String
  reservations Reservation[]
}

model Reservation {
  id          String    @id @default(cuid())
  userId      String
  serviceId   String
  therapistId String
  date        DateTime

  user      User      @relation(fields: [userId], references: [id])
  service   Service   @relation(fields: [serviceId], references: [id])
  therapist Therapist @relation(fields: [therapistId], references: [id])
}

model Package {
  id           String        @id @default(cuid())
  name         String
  sessions     Int
  price        Int
  inscription  Int
  userPackages UserPackage[]
}

model UserPackage {
  id     String  @id @default(cuid())
  userId String
  pkgId  String
  user   User    @relation(fields: [userId], references: [id])
  pkg    Package @relation(fields: [pkgId], references: [id])
}
