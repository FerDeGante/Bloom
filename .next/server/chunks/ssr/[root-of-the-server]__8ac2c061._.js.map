{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/ferdegante/Documents/Proyectos/Bloom/src/pages/success.tsx"],"sourcesContent":["import { GetServerSideProps } from \"next\";\nimport Stripe from \"stripe\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ninterface SessionItem {\n  dateISO: string;\n  hourRaw: string;\n  therapist: string;\n  calLink: string;\n  label: string;\n}\n\ninterface SuccessProps {\n  items: SessionItem[];\n}\n\nexport const getServerSideProps: GetServerSideProps<SuccessProps> = async ({\n  query,\n}) => {\n  const sessionId = query.session_id as string | undefined;\n  if (!sessionId) {\n    return { redirect: { destination: \"/dashboard?tab=reservar\", permanent: false } };\n  }\n\n  const stripe = new Stripe(process.env.STRIPE_SECRET!, {\n    apiVersion: \"2025-04-30.basil\",\n  });\n  const session = await stripe.checkout.sessions.retrieve(sessionId);\n  const m = session.metadata ?? {};\n\n  const datesArr = JSON.parse(m.dates as string) as string[];\n  const hoursArr = JSON.parse(m.hours as string) as string[];\n  const therapistsArr = JSON.parse(m.therapists as string) as string[];\n  const servicioSlug = m.servicio as string;\n\n  const serviceNames: Record<string, string> = {\n    agua: \"Estimulación en agua\",\n    piso: \"Estimulación en piso\",\n    quiropractica: \"Quiropráctica\",\n    fisioterapia: \"Fisioterapia\",\n    masajes: \"Masajes\",\n    cosmetologia: \"Cosmetología\",\n    \"prevencion-lesiones\": \"Prevención de lesiones\",\n    \"preparacion-fisica\": \"Preparación física\",\n    nutricion: \"Nutrición\",\n    \"medicina-rehabilitacion\": \"Medicina en rehabilitación\",\n    \"terpia-post-vacuna\": \"Terapia post vacuna\",\n  };\n  const servicioLabel =\n    serviceNames[servicioSlug] ?? `Cita de ${servicioSlug}`;\n\n  const items: SessionItem[] = datesArr.map((dateISO, i) => {\n    const [h = 0, m = 0] = (hoursArr[i] || \"0:00\")\n      .split(\":\")\n      .map(v => Number(v) || 0);\n    const start = new Date(dateISO);\n    start.setHours(h, m, 0);\n    const end = new Date(start.getTime() + 60 * 60 * 1000);\n    const fmt = (d: Date) => d.toISOString().replace(/[-:]|\\.\\d{3}/g, \"\");\n    const link = [\n      \"https://www.google.com/calendar/render?action=TEMPLATE\",\n      `&text=${encodeURIComponent(servicioLabel)}`,\n      `&dates=${fmt(start)}/${fmt(end)}`,\n      `&details=${encodeURIComponent(\"Terapeuta: \" + therapistsArr[i])}`,\n      `&location=${encodeURIComponent(\"Bloom Fisio\")}`,\n    ].join(\"\");\n    const label = `${start.toLocaleDateString()} • ${start.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })}`;\n    return {\n      dateISO,\n      hourRaw: hoursArr[i],\n      therapist: therapistsArr[i],\n      calLink: link,\n      label,\n    };\n  });\n\n  return { props: { items } };\n};\n\nexport default function Success({ items }: SuccessProps) {\n  const router = useRouter();\n  const [added, setAdded] = useState<string[]>([]);\n\n  const handleAdd = async (idx: number) => {\n    const itm = items[idx];\n    await fetch(\"/api/appointments/create\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        servicio: router.query.type,\n        terapeuta: itm.therapist,\n        date: itm.dateISO,\n        hour: itm.hourRaw.replace(\":00\", \"\"),\n      }),\n    });\n    setAdded(a => [...a, idx.toString()]);\n    // Si es la última sesión, navegar a Historial\n    if (added.length + 1 === items.length) {\n      router.push(\"/dashboard?tab=historial\", undefined, { shallow: true });\n    }\n  };\n\n  return (\n    <div className=\"text-center py-5\">\n      <h1>¡Gracias por tu pago!</h1>\n      <p>A continuación agrega cada sesión a tu calendario y al historial:</p>\n\n      {items.map((itm, i) => (\n        <div key={i} className=\"mb-3\">\n          <p>\n            <strong>Sesión {i + 1}:</strong> {itm.label} — {itm.therapist}\n          </p>\n          <Button\n            className=\"btn-orange me-2 mb-2\"\n            onClick={() => handleAdd(i)}\n            disabled={added.includes(i.toString())}\n          >\n            {added.includes(i.toString())\n              ? \"✔ Agregada\"\n              : `➕ Agregar sesión ${i + 1}`}\n          </Button>\n          <a\n            href={itm.calLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"btn btn-primary mb-2\"\n          >\n            Añadir a Calendar\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}