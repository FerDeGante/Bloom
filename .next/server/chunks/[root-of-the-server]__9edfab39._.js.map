{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/ferdegante/Documents/Proyectos/Bloom/src/app/api/easy/route.js"],"sourcesContent":["// server-only: Next.js App Router API Route\nexport async function GET(req) {\n  const { service_id, date } = Object.fromEntries(new URL(req.url).searchParams);\n\n  // Construye la URL de Easy!Appointments\n  // slots: GET /api/v1/slots?service_id=...\n  const url = `${process.env.NEXT_PUBLIC_EA_BASE}/api/v1/slots?service_id=${service_id}` +\n              (date ? `&date=${encodeURIComponent(date)}` : \"\");\n\n  const res = await fetch(url, {\n    headers: { \"X-Api-Key\": process.env.NEXT_PUBLIC_EA_KEY },\n  });\n  if (!res.ok) {\n    return new Response(\"Error al obtener slots\", { status: 500 });\n  }\n  const data = await res.json();\n  return new Response(JSON.stringify(data), { status: 200 });\n}\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;AACrC,eAAe,IAAI,GAAG;IAC3B,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,OAAO,WAAW,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE,YAAY;IAE7E,wCAAwC;IACxC,0CAA0C;IAC1C,MAAM,MAAM,mEAAmC,yBAAyB,EAAE,YAAY,GAC1E,CAAC,OAAO,CAAC,MAAM,EAAE,mBAAmB,OAAO,GAAG,EAAE;IAE5D,MAAM,MAAM,MAAM,MAAM,KAAK;QAC3B,SAAS;YAAE,WAAW;QAAiC;IACzD;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,OAAO,IAAI,SAAS,0BAA0B;YAAE,QAAQ;QAAI;IAC9D;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,OAAO;QAAE,QAAQ;IAAI;AAC1D","debugId":null}}]
}