{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/ferdegante/Documents/Proyectos/Bloom/src/app/api/stripe/checkout/route.js"],"sourcesContent":["import Stripe from \"stripe\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET, {\n  apiVersion: \"2023-10-16\",\n});\n\nexport async function POST(req) {\n  const { serviceId, priceId, date, slot_id } = await req.json();\n\n  const session = await stripe.checkout.sessions.create({\n    payment_method_types: [\"card\"],\n    line_items: [\n      {\n        price: priceId,\n        quantity: 1,\n      },\n    ],\n    mode: \"payment\",\n    success_url: `${process.env.NEXT_PUBLIC_APP_BASE}/confirmacion?session_id={CHECKOUT_SESSION_ID}&serviceId=${serviceId}&slot_id=${slot_id}&date=${date}`,\n    cancel_url: `${process.env.NEXT_PUBLIC_APP_BASE}/servicios/${serviceId}`,\n    metadata: { serviceId, slot_id, date },\n  });\n\n  return new Response(JSON.stringify({ sessionId: session.id }), { status: 200 });\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,wJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,aAAa,EAAE;IACnD,YAAY;AACd;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;IAE5D,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QACpD,sBAAsB;YAAC;SAAO;QAC9B,YAAY;YACV;gBACE,OAAO;gBACP,UAAU;YACZ;SACD;QACD,MAAM;QACN,aAAa,6DAAoC,yDAAyD,EAAE,UAAU,SAAS,EAAE,QAAQ,MAAM,EAAE,MAAM;QACvJ,YAAY,6DAAoC,WAAW,EAAE,WAAW;QACxE,UAAU;YAAE;YAAW;YAAS;QAAK;IACvC;IAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;QAAE,WAAW,QAAQ,EAAE;IAAC,IAAI;QAAE,QAAQ;IAAI;AAC/E","debugId":null}}]
}